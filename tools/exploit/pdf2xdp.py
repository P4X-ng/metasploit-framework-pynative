#!/usr/bin/env python3
"""
This script converts a PDF file to an equivalent XML Data Package file,
which can be opened by Adobe Reader as well and typically escapes AV
detection better than a "normal" PDF

Alexander 'alech' Klink, 2011
public domain / CC-0
"""

import base64
import sys


def main():
    if len(sys.argv) < 3:
        print(f"    Usage: {sys.argv[0]} input.pdf output.xdp", file=sys.stderr)
        sys.exit(1)
    
    pdf = sys.argv[1]
    xdp = sys.argv[2]
    
    try:
        with open(pdf, 'rb') as f:
            pdf_content = f.read()
    except IOError as e:
        print(f"Could not read input PDF file: {e}", file=sys.stderr)
        sys.exit(2)
    
    try:
        with open(xdp, 'w') as xdp_out:
            xdp_out.write('<?xml version="1.0"?><?xfa ?><xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/"><pdf xmlns="http://ns.adobe.com/xdp/pdf/"><document><chunk>')
            xdp_out.write(base64.b64encode(pdf_content).decode('ascii'))
            xdp_out.write('</chunk></document></pdf></xdp:xdp>')
    except IOError as e:
        print(f"Could not open output XDP file: {e}", file=sys.stderr)
        sys.exit(3)
    
    print(f"[*] Successfully converted {pdf} to {xdp}")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nAborted!")
        sys.exit(0)
